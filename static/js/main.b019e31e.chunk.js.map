{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","columns","setColumns","data","setData","errorFileFormat","setErrorFileFormat","processData","dataString","tableDataString","split","tableHead","unshift","push","headLowerCase","map","header","toLowerCase","includes","console","log","tableBody","slice","user","i","userData","index","name","value","trim","validation","usersDataCheckUnique","dataIndex","number","x10","Number","isInteger","length","checkNumber","age","isNaN","Math","round","toFixed","iDate","dublicateData","find","n","userDataCheck","headers","hiddenFileInput","React","useRef","className","title","onClick","current","click","type","style","display","ref","accept","onChange","e","file","target","files","reader","FileReader","readAsText","onload","result","onerror","error","border","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b019e31e.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n \nfunction App() {\n \n  const [columns, setColumns] = useState([]);\n  const [data, setData] = useState([]);\n  const [errorFileFormat, setErrorFileFormat] = useState(false);\n \n  // process CSV data\n  const processData = dataString => {\n    const tableDataString = dataString.split(/\\r\\n|\\n/);\n    const tableHead = tableDataString[0].split(';'); \n    tableHead.unshift('ID');\n    tableHead.push('Dublicate with');\n\n    //\n    const headLowerCase = tableHead.map(header => header.toLowerCase());\n    if (headLowerCase.includes('email') \n        && headLowerCase.includes('phone')\n        && headLowerCase.includes('full name')){\n      setErrorFileFormat(false)\n    } else {\n      setErrorFileFormat(true)\n      console.log ('bad');\n    }\n\n\n\n    const tableBody = tableDataString.slice(1)\n      .map((user, i) => (`${i+1}; `+user+'; ').split(';')\n        .map((userData, index) => {\n          let userObj = {\n            name: tableHead[index],\n            value: userData.trim(),\n            validation: true,\n          }\n\n          //check validation\n\n          return userObj;\n        })\n      )\n        .slice(0,-1);\n\n    // functions for validation (start)\n    function checkNumber(number) {\n      let x10 = number.slice(-10);\n      if (!Number.isInteger(+x10)) {\n        return false;\n      }\n      if (number.length >12 || number.length<10) {\n        return false;\n      } \n      if (number.length === 12) {\n        x10 = number.slice(2);\n        if (number.slice(0,2) !== '+1') {\n          return false;\n        }\n      }\n      if (number.length === 11) {\n        x10 = number.slice(2);\n        if (number.slice(0,1) !== '1') {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    function checkAge(age) {\n      if (age < 21 || !Number.isInteger(+age)) {\n        return false;\n      }\n      return true;\n    }\n    // end functions for validation\n\n\n    // set date with check validation\n    const usersData = tableBody.map((user, i) => user.map((userData, dataIndex) => {\n      switch (userData.name.toLowerCase()) {\n        case ('phone'):\n          userData.validation = checkNumber(userData.value);\n          if (userData.validation && userData.value.length===10){\n            userData.value = '+1' + userData.value;\n          }\n          if (userData.validation && userData.value.length===11){\n            userData.value = '+' + userData.value;\n          }\n          break;\n        case ('age'):\n            userData.validation = checkAge(userData.value);\n          break;\n        case ('experience'):\n            console.log(user[dataIndex-1], userData);\n            if (!Number.isInteger(+userData.value) \n                || userData.value < 0 \n                || userData.value > user[dataIndex-1].value\n              ) {\n              userData.validation = false;\n            }\n          break;\n        case ('yearly income'):\n          if (isNaN(+userData.value) || +userData.value > 1000000) {\n            userData.validation = false;\n          } else if (userData.value) {\n            userData.value = (Math.round(userData.value * 100)/100).toFixed(2);\n          }\n          break;\n        case ('has children'):\n            userData.validation = (userData.value.toLowerCase() ==='true'\n              || userData.value.toLowerCase() ==='false'\n              || userData.value ===''\n            ) \n            ? true\n            : false;\n            if (userData.value === '') {\n              userData.value = 'FALSE';\n            }\n            break;\n        default:\n          break;\n      }\n      return userData;\n    }));\n\n    // set data with check unique Phone and Email\n    const usersDataCheckUnique = usersData.map((user, i) => user.map((userData, iDate) => {\n      if (userData.name.toLowerCase() === 'phone') {\n        const dublicateData = tableBody.find((user, n) => n !== i && user.find(userDataCheck => userDataCheck.value === userData.value));\n        if (dublicateData) {\n          user[user.length-1].value = dublicateData[0].value;\n          userData.validation = false;\n        }\n      }\n      if (userData.name.toLowerCase() === 'email') {\n        const dublicateData = tableBody.find((user, n) => n !== i && user.find(userDataCheck => userDataCheck.value.toLowerCase() === userData.value.toLowerCase()));\n        if (dublicateData) {\n          user[user.length-1].value = dublicateData[0].value;\n          userData.validation = false;\n        }\n      }\n      return userData;\n    }));\n\n\n    // set headers\n    const headers = tableHead.map(header => ({\n      name: header,\n    }));\n\n    // set state\n    setData(usersDataCheckUnique);\n    setColumns(headers);\n  }\n \n  // handle file upload\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    if (file) {\n      reader.readAsText(file);\n      reader.onload = () => {\n        processData(reader.result);\n      };\n      reader.onerror = () => {\n        console.log(reader.error);\n      };\n    }\n  }\n\n  // function for change name of button\n  const hiddenFileInput = React.useRef(null);\n  const handleClick = () => {\n    hiddenFileInput.current.click();\n  };\n\n  // APP RETURN\n  return (\n    <div>\n      <header className=\"App-header\">\n        <p> DataTable </p>\n      </header>\n      <>\n        <button \n          title = 'import data in csv format with headers \"full name\", \"phone\" and \"email\"' \n          onClick={handleClick}\n        >\n          Import users\n        </button>\n        <input\n          type=\"file\"\n          style={{display:'none'}}\n          ref={hiddenFileInput}\n          accept=\".csv\"\n          onChange={handleFileUpload}\n        />\n      </>\n      {errorFileFormat ? 'File format is not correct': (\n    \n        <table>\n          <thead>\n            <tr>\n              {columns.map((header, index) => (\n                  <th key={index} style = {{border: '1px solid black'}}> \n                    {header.name} \n                  </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((user, index) => (\n              <tr key = {index}>\n                {user.map((userData, i) => (\n                  <td \n                    key={i}\n                    style = {{backgroundColor: !userData.validation && 'rgb(244, 204, 204'}}\n                  >\n                    {userData.value}\n                  </td>\n                ))}\n              </tr>  \n            ))}\n          </tbody>\n\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}